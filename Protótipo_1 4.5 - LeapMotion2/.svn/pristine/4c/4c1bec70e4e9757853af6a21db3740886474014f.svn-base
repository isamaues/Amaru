using UnityEngine;
using System.Collections;
using System;

public class FloorManager : MonoBehaviour
{
	public GameObject floorModel;
	public int floorBlocks = 0;
	private ArrayList floorList;
	public Vector3 initialPosition = Vector3.zero;

	void Start ()
	{
		if (floorModel == null)
			throw new Exception ("Modelo do piso nulo");
		
		floorList = new ArrayList ();	
			
	}
	
	void Update ()
	{
		UpdateFloor ();	
	}
	
	private void UpdateFloor ()
	{
		if (floorList.Count < 2) {      
		
			floorList = new ArrayList();
			
			GameObject temp = (GameObject)Instantiate (floorModel, new Vector3 (0, initialPosition.y, initialPosition.z), floorModel.transform.rotation);
		
		
			Vector3 origin = Camera.main.ScreenToWorldPoint (new Vector3 (0f, 0f, 0f));
			Vector3 extent = Camera.main.ScreenToWorldPoint (new Vector3 (Camera.main.pixelWidth, Camera.main.pixelHeight, 0f));
			
			floorBlocks = (int)((extent.x - origin.x) / temp.collider.bounds.size.x) + 2;	
				
			var initialBlockPosition = new Vector3 (Camera.main.transform.position.x - (floorBlocks / 2f) * temp.collider.bounds.size.x, initialPosition.y, initialPosition.z);
				
			temp.transform.position = initialBlockPosition;
								
			floorList.Add (temp);

			for (int i = 0; i < floorBlocks; i++) {
				Vector3 pos = (floorList [i] as GameObject).transform.position + new Vector3 ((floorList [i] as GameObject).collider.bounds.size.x, initialPosition.y, initialPosition.z);
						
				CreateFloor (pos, i + 1);
						
			}
			
				
		} else {
			if (Camera2DTracker.IsOnCamera (floorList [0] as GameObject, true)) {
				Vector3 pos = (floorList [0] as GameObject).transform.position - new Vector3 ((floorList [0] as GameObject).collider.bounds.size.x, initialPosition.y, initialPosition.z);
				CreateFloor (pos, 0);
			} else if (!Camera2DTracker.IsOnCamera (floorList [1] as GameObject, true)) {
				DestroyFloor (floorList [0] as GameObject);
			}
					
			if (Camera2DTracker.IsOnCamera (floorList [floorList.Count - 1] as GameObject, true)) {
				Vector3 pos = (floorList [floorList.Count - 1] as GameObject).transform.position + new Vector3 ((floorList [0] as GameObject).collider.bounds.size.x, initialPosition.y, initialPosition.z);
				CreateFloor (pos, floorList.Count);
			} else if (!Camera2DTracker.IsOnCamera (floorList [floorList.Count - 2] as GameObject, true)) {
				DestroyFloor (floorList [floorList.Count - 1] as GameObject);
			}
			
		}		
				
	}
	
	private void DestroyFloor (GameObject toDestroy)
	{
		floorList.Remove (toDestroy);
		Destroy (toDestroy);
		
	}

	private void CreateFloor (Vector3 position, int index)
	{		
		GameObject temp = (GameObject)Instantiate (floorModel, position, floorModel.transform.rotation);
		floorList.Insert (index, temp);			
	}
}
